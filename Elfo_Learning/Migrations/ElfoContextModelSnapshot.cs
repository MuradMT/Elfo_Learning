// <auto-generated />
using Elfo_Learning.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Elfo_Learning.Migrations
{
    [DbContext(typeof(ElfoContext))]
    partial class ElfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Elfo_Learning.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Azerbaijan",
                            Name = "Baku"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Italy",
                            Name = "Milan"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Turkey",
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Ukraine",
                            Name = "Kiev"
                        },
                        new
                        {
                            Id = 5,
                            Country = "Georgia",
                            Name = "Batumi"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
